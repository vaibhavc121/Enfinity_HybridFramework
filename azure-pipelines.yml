# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

jobs:
  # -------------------------------------------
  # ✅ Job 1: Regression Test on Windows
  # -------------------------------------------
  - job: Regression_NewTestCases
    displayName: "Regression(New) testcase execution"
    pool:
      vmImage: windows-latest
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'test'
        options: '-DsuiteXmlFile=testng-suites/NewTestCasesSuite.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testRunTitle: 'Automation Enginner (SDET)- Vaibhav Chavan'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        checkStyleRunAnalysis: true
        pmdRunAnalysis: true
        findBugsRunAnalysis: true

    - task: CopyFiles@2
      displayName: 'Copy ExtentReports + Linked Assets'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          reports/**
          screenshots/**
          logs/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)/ExtentReportBundle'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish ExtentReports Artifact with Assets'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/ExtentReportBundle'
        ArtifactName: 'ExtentReport'
        publishLocation: 'Container'

  # -------------------------------------------
  # ✅ Job 2: OWASP ZAP Security Scan on Linux
  # -------------------------------------------
  - job: SecurityScan_ZAP
    displayName: 'Security Scan using OWASP ZAP'
    dependsOn: Regression_NewTestCases
    condition: succeededOrFailed()
    pool:
      vmImage: ubuntu-latest

    steps:
    - script: |
        mkdir zap-output
        docker run -v $(System.DefaultWorkingDirectory)/zap-output:/zap/wrk:rw -t owasp/zap2docker-stable zap-baseline.py \
          -t https://testlogin.onenfinity.com/User/Login \
          -g gen.conf \
          -r zap_report.html
      displayName: 'Run ZAP Baseline Scan'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish ZAP Report'
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/zap-output'
        ArtifactName: 'ZAP_Security_Report'
        publishLocation: 'Container'
